{"version":3,"file":"static/js/496.9f44072a.chunk.js","mappings":"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","sources":["webpack://react-template/./src/pages/SuperheroEditPage/SuperheroEditPage.module.css?5ef4","pages/SuperheroEditPage/SuperheroEditPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SuperheroEditPage_container__nZ+9m\",\"title\":\"SuperheroEditPage_title__oKFu9\",\"formControl\":\"SuperheroEditPage_formControl__RwAtc\",\"label\":\"SuperheroEditPage_label__WSKWi\",\"input\":\"SuperheroEditPage_input__nZW4y\",\"error\":\"SuperheroEditPage_error__jhgoj\",\"button\":\"SuperheroEditPage_button__fKU4e\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Notiflix from 'notiflix';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { updateSuperhero } from '../../redux/superheroes/superheroesOperations';\nimport css from './SuperheroEditPage.module.css';\n\nconst validationSchema = Yup.object().shape({\n  nickname: Yup.string().required('Nickname is required'),\n  real_name: Yup.string().required('Real name is required'),\n  origin_description: Yup.string().required('Origin description is required'),\n  superpowers: Yup.string()\n    .trim()\n    .required('Superpowers are required')\n    .test('is-array', 'Superpowers must be a comma-separated list', value => {\n      if (!value) return true;\n      const superpowersArray = value\n        .split(',')\n        .map(superpower => superpower.trim());\n      return Array.isArray(superpowersArray);\n    }),\n  catch_phrase: Yup.string().required('Catch phrase is required'),\n  images: Yup.array().of(Yup.string().url('Invalid image URL format')),\n});\n\nconst SuperheroEditPage = () => {\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }, id) => {\n    try {\n      await dispatch(updateSuperhero({ id, formData: values }));\n\n      Notiflix.Notify.success('Superhero updated successfully');\n\n      setSubmitting(false);\n      resetForm();\n    } catch (error) {\n      Notiflix.Notify.failure(\n        `Failed to update superhero due to server error ${error.message}`\n      );\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Edit Superhero</h2>\n      <Formik\n        initialValues={{\n          nickname: '',\n          real_name: '',\n          origin_description: '',\n          superpowers: [],\n          catch_phrase: '',\n          images: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) =>\n          handleSubmit(values, { setSubmitting, resetForm }, id)\n        }\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"nickname\">\n                Nickname:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"nickname\"\n                name=\"nickname\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"nickname\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"real_name\">\n                Real Name:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"real_name\"\n                name=\"real_name\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"real_name\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"origin_description\">\n                Origin Description:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"origin_description\"\n                name=\"origin_description\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"origin_description\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"superpowers\">\n                Superpowers:\n              </label>\n              <Field\n                component=\"textarea\"\n                id=\"superpowers\"\n                name=\"superpowers\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"superpowers\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"catch_phrase\">\n                Catch Phrase:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"catch_phrase\"\n                name=\"catch_phrase\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"catch_phrase\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"images\">\n                Images:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"images\"\n                name=\"images\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"images\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <button\n              className={css.button}\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Update\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SuperheroEditPage;\n"],"names":["validationSchema","Yup","shape","nickname","required","real_name","origin_description","superpowers","trim","test","value","superpowersArray","split","map","superpower","Array","isArray","catch_phrase","images","of","url","dispatch","useDispatch","id","useParams","handleSubmit","values","setSubmitting","resetForm","updateSuperhero","formData","Notiflix","message","className","css","initialValues","onSubmit","isSubmitting","htmlFor","type","name","component","disabled"],"sourceRoot":""}