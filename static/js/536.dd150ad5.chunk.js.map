{"version":3,"file":"static/js/536.dd150ad5.chunk.js","mappings":"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","sources":["webpack://react-template/./src/pages/SuperheroAddPage/SuperheroAddPage.module.css?9ce2","pages/SuperheroAddPage/SuperheroAddPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SuperheroAddPage_container__TREHk\",\"title\":\"SuperheroAddPage_title__-3Ql6\",\"formControl\":\"SuperheroAddPage_formControl__T8jqp\",\"label\":\"SuperheroAddPage_label__AL7Ga\",\"input\":\"SuperheroAddPage_input__YChs4\",\"error\":\"SuperheroAddPage_error__+Ww79\",\"button\":\"SuperheroAddPage_button__tQ9C5\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Notiflix from 'notiflix';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addSuperhero } from '../../redux/superheroes/superheroesOperations';\nimport css from './SuperheroAddPage.module.css';\n\nconst validationSchema = Yup.object().shape({\n  nickname: Yup.string().required('Nickname is required'),\n  real_name: Yup.string().required('Real name is required'),\n  origin_description: Yup.string().required('Origin description is required'),\n  superpowers: Yup.string()\n    .trim()\n    .required('Superpowers are required')\n    .test('is-array', 'Superpowers must be a comma-separated list', value => {\n      if (!value) return true;\n      const superpowersArray = value\n        .split(',')\n        .map(superpower => superpower.trim());\n      return Array.isArray(superpowersArray);\n    }),\n  catch_phrase: Yup.string().required('Catch phrase is required'),\n  image: Yup.string().url('Invalid image URL format'),\n});\n\nconst SuperheroAddPage = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      await dispatch(addSuperhero(values));\n\n      Notiflix.Notify.success('Superhero created successfully');\n\n      setSubmitting(false);\n      resetForm();\n      navigate('/');\n    } catch (error) {\n      Notiflix.Notify.failure(\n        `Failed to create superhero due to server error ${error.message}`\n      );\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Add Superhero</h2>\n      <Formik\n        initialValues={{\n          nickname: '',\n          real_name: '',\n          origin_description: '',\n          superpowers: '',\n          catch_phrase: '',\n          image: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) =>\n          handleSubmit(values, { setSubmitting, resetForm })\n        }\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"nickname\">\n                Nickname:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"nickname\"\n                name=\"nickname\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"nickname\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"real_name\">\n                Real Name:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"real_name\"\n                name=\"real_name\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"real_name\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"origin_description\">\n                Origin Description:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"origin_description\"\n                name=\"origin_description\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"origin_description\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"superpowers\">\n                Superpowers:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"superpowers\"\n                name=\"superpowers\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"superpowers\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"catch_phrase\">\n                Catch Phrase:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"catch_phrase\"\n                name=\"catch_phrase\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"catch_phrase\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <div className={css.formControl}>\n              <label className={css.label} htmlFor=\"image\">\n                Image:\n              </label>\n              <Field\n                type=\"text\"\n                id=\"image\"\n                name=\"image\"\n                className={css.input}\n              />\n              <ErrorMessage\n                name=\"image\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n\n            <button\n              className={css.button}\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Create\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SuperheroAddPage;\n"],"names":["validationSchema","Yup","shape","nickname","required","real_name","origin_description","superpowers","trim","test","value","superpowersArray","split","map","superpower","Array","isArray","catch_phrase","image","url","dispatch","useDispatch","navigate","useNavigate","handleSubmit","values","setSubmitting","resetForm","addSuperhero","Notiflix","message","className","css","initialValues","onSubmit","isSubmitting","htmlFor","type","id","name","component","disabled"],"sourceRoot":""}